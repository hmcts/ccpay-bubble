{
  "stats": {
    "suites": 2,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2021-06-27T21:48:24.251Z",
    "end": "2021-06-27T22:13:22.873Z",
    "duration": 1498622,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "9ca101ef-3313-4af2-a3c9-f415f8ad3a57",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "2e071a1b-e8fb-4c82-a77e-db23c8fe5026",
        "title": "CC Pay Bubble Bulk Scan Acceptance Tests",
        "fullFile": "/Users/krishnakishorenuthalapati/paybubbleorder2/ccpay-bubble/acceptance-tests/test/end-to-end/tests/CCPB_BulkScanFunctionality_test.js",
        "file": "/acceptance-tests/test/end-to-end/tests/CCPB_BulkScanFunctionality_test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: codeceptjs.beforeSuite",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests \"before all\" hook: codeceptjs.beforeSuite",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.suiteSetup(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "6dd72c25-ba8b-4d15-9841-2ad315dbb97d",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before all\" hook: BeforeSuite",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests \"before all\" hook: BeforeSuite",
            "timedOut": false,
            "duration": 7322,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const response = await bulkScanApiCalls.toggleOffCaseValidation();\nI.wait(CCPBATConstants.fiveSecondWaitTime);\nif (response === successResponse) {\n  logger.info('Disabled CCD validation');\n}",
            "err": {},
            "isRoot": false,
            "uuid": "6eb230e9-c4e6-46e0-acaa-2ab5aec40d18",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: codeceptjs.before",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests \"before each\" hook: codeceptjs.before",
            "timedOut": false,
            "duration": 534,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.setup(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "d98d566a-50b0-4924-84fa-caba90af0c03",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: AfterSuite",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests \"after all\" hook: AfterSuite",
            "timedOut": false,
            "duration": 7124,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const response = await bulkScanApiCalls.toggleOnCaseValidation();\nI.wait(CCPBATConstants.fiveSecondWaitTime);\nif (response === successResponse) {\n  logger.info('Enabled CCD validation');\n}",
            "err": {},
            "isRoot": false,
            "uuid": "44ae5cea-2707-47ad-9457-7b80bb26c430",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"after all\" hook: codeceptjs.afterSuite",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests \"after all\" hook: codeceptjs.afterSuite",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.suiteTeardown(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "c11b9903-347e-4971-9389-9b26f9a877b3",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"after each\" hook: finalize codeceptjs",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests \"after each\" hook: finalize codeceptjs",
            "timedOut": false,
            "duration": 11,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.teardown(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "bd5701fe-5483-4fb9-ae84-3f1635fbc1fa",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Normal ccd case cash payment full allocation @nightly",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Normal ccd case cash payment full allocation @nightly",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  const totalAmount = 550;\n  const ccdAndDcn = await bulkScanApiCalls.bulkScanNormalCcd('AA07', totalAmount, 'Cash');\n  const ccdCaseNumber = ccdAndDcn[1];\n  const dcnNumber = ccdAndDcn[0];\n  const ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\n  await miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\n  CaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'CCD reference');\n  CaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£550.00', 'Cash');\n  CaseTransaction.allocateToNewFee();\n  AddFees.addFees('550.00', 'family', 'family_court');\n  FeesSummary.verifyFeeSummaryBulkScan('FEE0002');\n  FeesSummary.allocateBulkPayment();\n  ConfirmAssociation.verifyConfirmAssociationFullPayment('FEE0002', '£550.00', '£550.00');\n  ConfirmAssociation.confirmPayment();\n  CaseTransaction.checkBulkCaseSuccessPayment(ccdCaseNumberFormatted, 'CCD reference', 'Allocated');\n  CaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\n  const receiptReference = await CaseTransaction.getReceiptReference();\n  PaymentHistory.navigateToReceiptRefs(receiptReference);\n  PaymentHistory.validateCcdPaymentDetails(receiptReference, '£550.00', dcnNumber, 'success', 'Cash', 'FEE0002');\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "8421e44e-3f8c-46f9-8327-f49e375000d8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Normal ccd case cheque payment partial allocation 2 fees add @pipeline @nightly @crossbrowser",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Normal ccd case cheque payment partial allocation 2 fees add @pipeline @nightly @crossbrowser",
            "timedOut": false,
            "duration": 181608,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\nconst totalAmount = 469;\nconst ccdAndDcn = await bulkScanApiCalls.bulkScanNormalCcd('AA08', totalAmount, 'cheque');\nconst ccdCaseNumber = ccdAndDcn[1];\nconst dcnNumber = ccdAndDcn[0];\nconst ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\nawait miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\nCaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'Case reference');\nCaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£469.00', 'cheque');\nCaseTransaction.allocateToNewFee();\nAddFees.addFees('550.00', 'family', 'family_court');\nFeesSummary.verifyFeeSummaryBulkScan('FEE0002');\nFeesSummary.deductRemission();\nRemission.noRemissionCodeOrAmount();\nRemission.remissionAmountExceed('600');\nRemission.processRemission('FEE0002', '450');\nRemission.confirmprocessRemission();\nFeesSummary.verifyFeeSummaryAfterRemissionBulkScan('FEE0002', '£100.00', '£450.00');\nFeesSummary.addFeeFromSummary();\nAddFees.addFees('19.00', 'civil', 'magistrates_court');\nFeesSummary.verifyFeeSummaryBulkScan('FEE0362');\nFeesSummary.allocateBulkPayment();\nConfirmAssociation.verifyConfirmAssociationFullPayment('FEE0002', '£469.00', '£550.00');\nConfirmAssociation.verifyConfirmAssociationFullPayment('FEE0362', '£469.00', '£19.00');\nConfirmAssociation.confirmPayment();\nCaseTransaction.checkBulkCaseSuccessPayment(ccdCaseNumberFormatted, 'Case reference', 'Allocated');\nCaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\nCaseTransaction.validateTransactionPageForRemission('HWF-A1B-23C', 'FEE0002', '£100.00');\nI.Logout();",
            "err": {},
            "isRoot": false,
            "uuid": "f15a4b36-1280-43f8-b27a-6c1286a5e7ae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Normal ccd case cash payment transferred @nightly",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Normal ccd case cash payment transferred @nightly",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  const totalAmount = 550;\n  const ccdAndDcn = await bulkScanApiCalls.bulkScanNormalCcd('AA07', totalAmount, 'Cash');\n  const ccdCaseNumber = ccdAndDcn[1];\n  const dcnNumber = ccdAndDcn[0];\n  const ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\n  await miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\n  CaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'CCD reference');\n  CaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£550.00', 'Cash');\n  CaseTransaction.allocateToTransferred();\n  CaseTransferred.validateTransferredPage(dcnNumber, '550.00', 'Cash');\n  CaseTransferred.validateAndConfirmTransferred('auto transferred reason', 'Basildon Combined Court - Crown (W802)');\n  CaseTransferred.confirmPayment();\n  CaseTransaction.checkBulkCaseSuccessPayment(ccdCaseNumberFormatted, 'CCD reference', 'Transferred');\n  CaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\n  const receiptReference = await CaseTransaction.getReceiptReference();\n  PaymentHistory.navigateToReceiptRefs(receiptReference);\n  PaymentHistory.validateTransferredUnidentifiedPaymentDetails(receiptReference, '£550.00', dcnNumber, 'Cash');\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "be96dbad-be65-4d1f-be5b-af52d1028541",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Exception ccd case cash payment transferred @nightly",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Exception ccd case cash payment transferred @nightly",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  const totalAmount = 550;\n  const ccdAndDcn = await bulkScanApiCalls.bulkScanExceptionCcd('AA07', totalAmount, 'Cheque');\n  const ccdCaseNumber = ccdAndDcn[1];\n  const dcnNumber = ccdAndDcn[0];\n  const ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\n  await miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\n  CaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'Exception reference');\n  CaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£550.00', 'Cheque');\n  CaseTransaction.allocateToTransferred();\n  CaseTransferred.validateTransferredPage(dcnNumber, '550.00', 'Cheque');\n  CaseTransferred.validateAndConfirmTransferred('auto transferred reason', 'Basildon Combined Court - Crown (W802)');\n  CaseTransferred.confirmPayment();\n  CaseTransaction.checkBulkCaseSuccessPayment(ccdCaseNumberFormatted, 'Exception reference', 'Transferred');\n  CaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\n  // Search using receipt number\n  const receiptSearch = await CaseTransaction.getReceiptReference();\n  CaseSearch.navigateToCaseTransaction();\n  await miscUtils.multipleSearch(CaseSearch, I, receiptSearch);\n  CaseTransaction.checkBulkCaseSuccessPayment(ccdCaseNumberFormatted, 'Exception reference', 'Transferred');\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "7d2d6853-194d-4e60-83d0-01e22807831c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "DCN Search for ccd case associated with exception postal order payment transferred @nightly @pipeline",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: DCN Search for ccd case associated with exception postal order payment transferred @nightly @pipeline",
            "timedOut": false,
            "duration": 125561,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\nconst totalAmount = 600;\nconst ccdAndDcn = await bulkScanApiCalls.bulkScanCcdLinkedToException('AA09', totalAmount, 'PostalOrder');\nconst dcnNumber = ccdAndDcn[0];\nconst ccdCaseNumber = ccdAndDcn[1];\nconst ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\nawait miscUtils.multipleSearch(CaseSearch, I, dcnNumber);\nCaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'Case reference');\nCaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£600.00', 'postal order');\nCaseTransaction.allocateToTransferred();\nCaseTransferred.validateTransferredPage(dcnNumber, '600.00', 'Postal Order');\nCaseTransferred.validateAndConfirmTransferred('auto transferred reason', 'Basildon Combined Court - Crown (W802)');\nCaseTransferred.confirmPayment();\nCaseTransaction.checkBulkCaseSuccessPayment(ccdCaseNumberFormatted, 'Case reference', 'Transferred');\nCaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\nI.Logout();",
            "err": {},
            "isRoot": false,
            "uuid": "1847299b-5924-460f-bcbb-2ff99a2ad8be",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Normal ccd case cash payment transferred when no valid reason or site id selected @nightly",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Normal ccd case cash payment transferred when no valid reason or site id selected @nightly",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  const totalAmount = 550;\n  const ccdAndDcn = await bulkScanApiCalls.bulkScanNormalCcd('AA09', totalAmount, 'Cash');\n  const ccdCaseNumber = ccdAndDcn[1];\n  const dcnNumber = ccdAndDcn[0];\n  const ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\n  await miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\n  CaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'CCD reference');\n  CaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£550.00', 'Cash');\n  CaseTransaction.allocateToTransferred();\n  CaseTransferred.confirmPayment();\n  CaseTransferred.whenNoReasonAndSiteid();\n  CaseTransferred.selectSiteId('Basildon Combined Court - Crown (W802)');\n  CaseTransferred.inputTransferredReason('ab');\n  CaseTransferred.confirmPayment();\n  CaseTransferred.whenReasonLessThanLimit();\n  CaseTransferred.cancelTransferredReason();\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "6d35aec1-d233-4cae-a047-6a6b77f43f94",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Exception Case Cheque Payment Unidentified @nightly @pipeline",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Exception Case Cheque Payment Unidentified @nightly @pipeline",
            "timedOut": false,
            "duration": 141748,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\nconst totalAmount = 550;\nconst ccdAndDcn = await bulkScanApiCalls.bulkScanExceptionCcd('AA07', totalAmount, 'Cheque');\nconst ccdCaseNumber = ccdAndDcn[1];\nconst dcnNumber = ccdAndDcn[0];\nconst ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\nawait miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\nCaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'Exception reference');\nCaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£550.00', 'cheque');\nCaseTransaction.allocateToUnidentified();\nCaseUnidentified.validateUnidentifiedPage(dcnNumber, '550.00', 'Cheque');\nCaseUnidentified.validateAndConfirmUnidentified('auto unidentified reason');\nCaseUnidentified.confirmPayment();\nCaseTransaction.checkBulkCaseSuccessPayment(ccdCaseNumberFormatted, 'Exception reference', 'Unidentified');\nCaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\nconst receiptReference = await CaseTransaction.getReceiptReference();\n// PaymentHistory.navigateToReceiptRefs(receiptReference);\nPaymentHistory.validateTransferredUnidentifiedPaymentDetails(receiptReference, '£550.00', dcnNumber, 'cheque');\nI.Logout();",
            "err": {},
            "isRoot": false,
            "uuid": "5dd08635-0374-477f-a30c-93154a54cb2c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Exception Case DCN Search Cheque Payment Unidentified when no or less investigation comment provided @nightly",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Exception Case DCN Search Cheque Payment Unidentified when no or less investigation comment provided @nightly",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  const totalAmount = 550;\n  const ccdAndDcn = await bulkScanApiCalls.bulkScanExceptionCcd('AA08', totalAmount, 'Cheque');\n  const ccdCaseNumber = ccdAndDcn[1];\n  const dcnNumber = ccdAndDcn[0];\n  const ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\n  await miscUtils.multipleSearch(CaseSearch, I, dcnNumber);\n  CaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'Exception reference');\n  CaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£550.00', 'cheque');\n  CaseTransaction.allocateToUnidentified();\n  CaseUnidentified.continuePayment();\n  CaseUnidentified.whenNoInvestigation();\n  CaseUnidentified.inputUnidentifiedComment('ta');\n  CaseUnidentified.continuePayment();\n  CaseUnidentified.whenCommentLessThanLimit();\n  CaseUnidentified.cancelUnidentifiedComment();\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "1b9e3a07-6713-4630-af51-9a46e53171e6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Ccd case search with exception record postal order payment shortfall payment @nightly @pipeline",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Ccd case search with exception record postal order payment shortfall payment @nightly @pipeline",
            "timedOut": false,
            "duration": 89613,
            "state": "passed",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\nconst totalAmount = 500;\nconst ccdAndDcn = await bulkScanApiCalls.bulkScanCcdLinkedToException('AA08', totalAmount, 'PostalOrder');\nconst dcnNumber = ccdAndDcn[0];\nconst ccdCaseNumber = ccdAndDcn[1];\nconst ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\nawait miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\nCaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'Case reference');\nCaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£500.00', 'postal order');\nCaseTransaction.allocateToNewFee();\nAddFees.addFees('550.00', 'family', 'family_court');\nFeesSummary.verifyFeeSummaryBulkScan('FEE0002');\nFeesSummary.allocateBulkPayment();\nConfirmAssociation.verifyConfirmAssociationShortfallPayment('FEE0002', '£500.00', '£50.00');\nConfirmAssociation.selectShortfallReasonExplainatoryAndUser('Help with Fees', 'Contact applicant');\nConfirmAssociation.confirmPayment();\nCaseTransaction.checkBulkCaseSurplusOrShortfallPayment(ccdCaseNumberFormatted, 'Case reference', 'Allocated', '£50.00');\nCaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\n// Search using receipt number\nconst receiptSearch = await CaseTransaction.getReceiptReference();\nCaseSearch.navigateToCaseTransaction();\nawait miscUtils.multipleSearch(CaseSearch, I, receiptSearch);\nCaseTransaction.checkBulkCaseNonPaidPayment(ccdCaseNumberFormatted, 'Case reference', 'Allocated');\nPaymentHistory.navigateToPaymentHistory();\n// await miscUtils.multipleSearch(CaseSearch, I, ccdCaseNumber);\n// PaymentHistory.navigateToPaymentHistory();\n// await miscUtils.multipleSearch(CaseSearch, I, receiptSearch);\n// PaymentHistory.validatePaymentHistoryPage();\n// PaymentHistory.navigateToReceiptRefs(receiptSearch);\n// PaymentHistory.validateCcdPaymentDetails(receiptSearch, '£500.00', dcnNumber, 'success', 'Postal order', 'FEE0002');\nI.Logout();",
            "err": {},
            "isRoot": false,
            "uuid": "ed02c399-ff01-49d0-998a-2d3cd238db94",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Exception search with ccd record postal order payment surplus payment @nightly",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Exception search with ccd record postal order payment surplus payment @nightly",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  const totalAmount = 600;\n  const ccdAndDcn = await bulkScanApiCalls.bulkScanCcdLinkedToException('AA07', totalAmount, 'PostalOrder');\n  const dcnNumber = ccdAndDcn[0];\n  const exNumber = ccdAndDcn[2];\n  const ccdCaseNumber = ccdAndDcn[1];\n  I.wait(CCPBATConstants.fiveSecondWaitTime);\n  const ccdCaseNumberFormatted = stringUtils.getCcdCaseInFormat(ccdCaseNumber);\n  await miscUtils.multipleSearch(CaseSearch, I, exNumber);\n  CaseTransaction.checkBulkCase(ccdCaseNumberFormatted, 'CCD reference');\n  CaseTransaction.checkUnallocatedPayments('1', dcnNumber, '£600.00', 'Postal order');\n  CaseTransaction.allocateToNewFee();\n  AddFees.addFees('550.00', 'family', 'family_court');\n  FeesSummary.verifyFeeSummaryBulkScan('FEE0002');\n  FeesSummary.allocateBulkPayment();\n  ConfirmAssociation.verifyConfirmAssociationSurplusPayment('FEE0002', '£550.00', '£50.00');\n  ConfirmAssociation.selectSurplusReasonOtherExplainatoryAndUser('Help with Fees awarded', 'Other explainatory note', 'Auto Comment');\n  ConfirmAssociation.confirmPayment();\n  CaseTransaction.checkBulkCaseSurplusOrShortfallSuccessPayment(ccdCaseNumberFormatted, 'CCD reference', 'Allocated', '-£50.00');\n  CaseTransaction.checkIfBulkScanPaymentsAllocated(dcnNumber);\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "fb3fd2c1-c2e6-405e-aa4f-628f348e2147",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Download reports in paybubble @nightly",
            "fullTitle": "CC Pay Bubble Bulk Scan Acceptance Tests: Download reports in paybubble @nightly",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  Reports.navigateToReports();\n  Reports.validateReportsPage();\n  Reports.selectReportAndDownload('Data loss');\n  Reports.selectReportAndDownload('Unprocessed transactions');\n  Reports.selectReportAndDownload('Processed unallocated');\n  Reports.selectReportAndDownload('Shortfalls and surplus');\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "8e3f6763-994f-4e01-9329-160d285945b6",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8421e44e-3f8c-46f9-8327-f49e375000d8",
          "f15a4b36-1280-43f8-b27a-6c1286a5e7ae",
          "be96dbad-be65-4d1f-be5b-af52d1028541",
          "7d2d6853-194d-4e60-83d0-01e22807831c",
          "1847299b-5924-460f-bcbb-2ff99a2ad8be",
          "6d35aec1-d233-4cae-a047-6a6b77f43f94",
          "5dd08635-0374-477f-a30c-93154a54cb2c",
          "1b9e3a07-6713-4630-af51-9a46e53171e6",
          "ed02c399-ff01-49d0-998a-2d3cd238db94",
          "fb3fd2c1-c2e6-405e-aa4f-628f348e2147",
          "8e3f6763-994f-4e01-9329-160d285945b6"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 538556,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      },
      {
        "uuid": "0ba1b841-4af1-4804-9ade-f241a7094b93",
        "title": "CC Pay Bubble Acceptance Tests",
        "fullFile": "/Users/krishnakishorenuthalapati/paybubbleorder2/ccpay-bubble/acceptance-tests/test/end-to-end/tests/CCPB_SearchCaseWithCCD_test.js",
        "file": "/acceptance-tests/test/end-to-end/tests/CCPB_SearchCaseWithCCD_test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: codeceptjs.beforeSuite",
            "fullTitle": "CC Pay Bubble Acceptance Tests \"before all\" hook: codeceptjs.beforeSuite",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.suiteSetup(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "2c2991ec-8859-4f99-9e32-6a64b590de6d",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before all\" hook: BeforeSuite",
            "fullTitle": "CC Pay Bubble Acceptance Tests \"before all\" hook: BeforeSuite",
            "timedOut": false,
            "duration": 7301,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const response = await bulkScanApiCalls.toggleOffCaseValidation();\nI.wait(CCPBATConstants.fiveSecondWaitTime);\nif (response === successResponse) {\n  logger.info('Disabled CCD validation');\n}",
            "err": {},
            "isRoot": false,
            "uuid": "fa78e1f3-20c4-4695-a28d-c3f36339241c",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: codeceptjs.before",
            "fullTitle": "CC Pay Bubble Acceptance Tests \"before each\" hook: codeceptjs.before",
            "timedOut": false,
            "duration": 523,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.setup(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "57621b80-6668-4c7f-8dd2-b85e17faded6",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: AfterSuite",
            "fullTitle": "CC Pay Bubble Acceptance Tests \"after all\" hook: AfterSuite",
            "timedOut": false,
            "duration": 7064,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const response = await bulkScanApiCalls.toggleOnCaseValidation();\nI.wait(CCPBATConstants.fiveSecondWaitTime);\nif (response === successResponse) {\n  logger.info('Enabled CCD validation');\n}",
            "err": {},
            "isRoot": false,
            "uuid": "03e0c543-4fbf-45e8-a168-8951ec9e5089",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"after all\" hook: codeceptjs.afterSuite",
            "fullTitle": "CC Pay Bubble Acceptance Tests \"after all\" hook: codeceptjs.afterSuite",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.suiteTeardown(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "0d23d4fb-6cf0-4dd8-8b62-fcd264b1faba",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"after each\" hook: finalize codeceptjs",
            "fullTitle": "CC Pay Bubble Acceptance Tests \"after each\" hook: finalize codeceptjs",
            "timedOut": false,
            "duration": 32,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.teardown(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "6cf5ab52-f3ee-4e50-bf49-c83add6f4fa8",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Search for a case with actual case number from CCD @nightly",
            "fullTitle": "CC Pay Bubble Acceptance Tests: Search for a case with actual case number from CCD @nightly",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  I.see('Search for a case');\n  I.see('What do you want to search for?');\n  I.see('CCD case reference or exception record');\n  I.see('Payment Asset Number (DCN)');\n  I.see('Case Transaction');\n  I.see('Payment history');\n  I.see('Reports');\n  await I.searchForCorrectCCDNumber();\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "db95dab8-3880-4f47-aaae-1f6fa2b053e4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Search for a case with actual case for Telephony flow @nightly",
            "fullTitle": "CC Pay Bubble Acceptance Tests: Search for a case with actual case for Telephony flow @nightly",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  await I.caseforTelephonyFlow();\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "6abc356d-09f1-47b7-99fb-4fa3951a7ba4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Amount Due case for Telephony flow @nightly @pipeline @crossbrowser",
            "fullTitle": "CC Pay Bubble Acceptance Tests: Amount Due case for Telephony flow @nightly @pipeline @crossbrowser",
            "timedOut": false,
            "duration": 162261,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\nawait I.AmountDueCaseForTelephonyFlow();\nI.Logout();",
            "err": {},
            "isRoot": false,
            "uuid": "102294e3-06ce-4b43-b642-5438409e3a16",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Remove fee from case transaction page Telephony flow @nightly",
            "fullTitle": "CC Pay Bubble Acceptance Tests: Remove fee from case transaction page Telephony flow @nightly",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "if (nightlyTest) {\n  I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\n  await I.removeFeeFromCaseTransactionPageTelephonyFlow();\n  I.Logout();\n}",
            "err": {},
            "isRoot": false,
            "uuid": "dbf67a70-5608-4dd3-adda-7397e9e4d141",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Search for a case with dummy case number @nightly @pipeline",
            "fullTitle": "CC Pay Bubble Acceptance Tests: Search for a case with dummy case number @nightly @pipeline",
            "timedOut": false,
            "duration": 249332,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "I.login('robreallywantsccdaccess@mailinator.com', 'Testing1234');\nconst responseOn = await bulkScanApiCalls.toggleOnCaseValidation();\nI.wait(CCPBATConstants.fiveSecondWaitTime);\nif (responseOn === successResponse) {\n  logger.info('Enabled CCD validation');\n}\nawait I.searchForCCDdummydata();\nI.Logout();",
            "err": {},
            "isRoot": false,
            "uuid": "6f89e350-3f2e-4a5f-838f-db679ffd326d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "db95dab8-3880-4f47-aaae-1f6fa2b053e4",
          "6abc356d-09f1-47b7-99fb-4fa3951a7ba4",
          "102294e3-06ce-4b43-b642-5438409e3a16",
          "dbf67a70-5608-4dd3-adda-7397e9e4d141",
          "6f89e350-3f2e-4a5f-838f-db679ffd326d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 411595,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 0
  },
  "copyrightYear": 2021
}
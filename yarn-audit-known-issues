<<<<<<< HEAD
{"type":"auditAdvisory","data":{"resolution":{"id":1084,"path":"mochawesome>mochawesome-report-generator>yargs>os-locale>mem","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.1.0","paths":["mochawesome>mochawesome-report-generator>yargs>os-locale>mem"]}],"id":1084,"created":"2019-07-18T21:30:31.935Z","updated":"2019-11-19T23:31:37.349Z","deleted":null,"title":"Denial of Service","found_by":{"link":"","name":"Juan Campa","email":""},"reported_by":{"link":"","name":"Juan Campa","email":""},"module_name":"mem","cves":[],"vulnerable_versions":"<4.0.0","patched_versions":">=4.0.0","overview":"Versions of `mem` prior to 4.0.0 are vulnerable to Denial of Service (DoS).  The package fails to remove old values from the cache even after a value passes its `maxAge` property. This may allow attackers to exhaust the system's memory if they are able to abuse the application logging.","recommendation":"Upgrade to version 4.0.0 or later.","references":"- [Snyk Report](https://snyk.io/vuln/npm:mem:20180117)","access":"public","severity":"low","cwe":"CWE-400","metadata":{"module_type":"","exploitability":2,"affected_components":""},"url":"https://npmjs.com/advisories/1084"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1500,"path":"mochawesome>mochawesome-report-generator>yargs>yargs-parser","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"8.1.0","paths":["mochawesome>mochawesome-report-generator>yargs>yargs-parser"]}],"id":1500,"created":"2020-03-26T19:21:50.174Z","updated":"2020-05-01T01:05:15.020Z","deleted":null,"title":"Prototype Pollution","found_by":{"link":"","name":"Snyk Security Team","email":""},"reported_by":{"link":"","name":"Snyk Security Team","email":""},"module_name":"yargs-parser","cves":[],"vulnerable_versions":"<13.1.2 || >=14.0.0 <15.0.1 || >=16.0.0 <18.1.2","patched_versions":">=13.1.2 <14.0.0 || >=15.0.1 <16.0.0 || >=18.1.2","overview":"Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n","recommendation":"Upgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.","references":"- [Snyk Report](https://snyk.io/vuln/SNYK-JS-YARGSPARSER-560381)","access":"public","severity":"low","cwe":"CWE-471","metadata":{"module_type":"","exploitability":1,"affected_components":""},"url":"https://npmjs.com/advisories/1500"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1643,"path":"pug","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.0.3","paths":["pug"]}],"id":1643,"created":"2021-03-03T02:09:54.865Z","updated":"2021-03-03T02:17:05.831Z","deleted":null,"title":"Remote Code Execution","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"pug","cves":["CVE-2021-21353"],"vulnerable_versions":"<3.0.1","patched_versions":">=3.0.1","overview":"### Impact\n\nIn affected versions of `pug` and `pug-code-gen`, if a remote attacker was able to control the `pretty` option of the pug compiler, e.g. if you spread a user provided object such as the query parameters of a request into the pug template inputs, it was possible for them to achieve remote code execution on the node.js backend.\n\n### Patches\n\nUpgrade to `pug@3.0.1` or `pug-code-gen@3.0.2` or `pug-code-gen@2.0.3`, which correctly sanitise the parameter.\n\n### Workarounds\n\nIf there is no way for un-trusted input to be passed to pug as the `pretty` option, e.g. if you compile templates in advance before applying user input to them, you do not need to upgrade.","recommendation":"Upgrade `pug` to version 3.0.1","references":"- [GitHub Advisory](https://github.com/advisories/GHSA-p493-635q-r6gr)\n- [CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21353)\n- [Similar advisory for `pug-code-gen`](https://www.npmjs.com/advisories/1644)","access":"public","severity":"high","cwe":"CWE-74","metadata":{"module_type":"","exploitability":8,"affected_components":""},"url":"https://npmjs.com/advisories/1643"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1644,"path":"pug>pug-code-gen","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.0.2","paths":["pug>pug-code-gen"]}],"id":1644,"created":"2021-03-03T02:16:22.974Z","updated":"2021-03-03T02:17:24.599Z","deleted":null,"title":"Remote Code Execution","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"pug-code-gen","cves":["CVE-2021-21353"],"vulnerable_versions":"<2.0.3||>=3.0.0 <3.0.2","patched_versions":">=2.0.3 <3.0.0||>=3.0.2","overview":"### Impact\n\nIn affected versions of `pug` and `pug-code-gen`, if a remote attacker was able to control the `pretty` option of the pug compiler, e.g. if you spread a user provided object such as the query parameters of a request into the pug template inputs, it was possible for them to achieve remote code execution on the node.js backend.\n\n### Patches\n\nUpgrade to `pug@3.0.1` or `pug-code-gen@3.0.2` or `pug-code-gen@2.0.3`, which correctly sanitise the parameter.\n\n### Workarounds\n\nIf there is no way for un-trusted input to be passed to pug as the `pretty` option, e.g. if you compile templates in advance before applying user input to them, you do not need to upgrade.","recommendation":"Upgrade `pug-code-gen` to version 2.0.3 or 3.0.2.","references":"- [GitHub Advisory](https://github.com/advisories/GHSA-p493-635q-r6gr)\n- [CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21353)\n- [Similar advisory for `pug`](https://www.npmjs.com/advisories/1643)","access":"public","severity":"high","cwe":"CWE-74","metadata":{"module_type":"","exploitability":8,"affected_components":""},"url":"https://npmjs.com/advisories/1644"}}}
=======
>>>>>>> eb3ad8001ab2f8e6540027a3844fa3971da39ebc

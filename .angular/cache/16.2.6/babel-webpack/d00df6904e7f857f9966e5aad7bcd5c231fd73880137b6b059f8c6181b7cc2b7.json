{"ast":null,"code":"import { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CaseRefService } from '../../services/caseref/caseref.service';\nimport { PaymentGroupService } from '../../services/payment-group/payment-group.service';\nimport { ViewPaymentService } from 'projects/view-payment/src/lib/view-payment.service';\nimport * as ls from 'local-storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/payment-group/payment-group.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/caseref/caseref.service\";\nimport * as i5 from \"projects/view-payment/src/lib/view-payment.service\";\nimport * as i6 from \"@angular/common\";\nfunction CcdSearchComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"h2\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 22)(4, \"ul\", 23)(5, \"li\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage.title, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage.body, \" \");\n  }\n}\nfunction CcdSearchComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"Enter a CCD case reference number in the correct format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CcdSearchComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function CcdSearchComponent_div_22_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSelectionChange(\"DCN\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 26);\n    i0.ɵɵtext(3, \" Payment Asset Number (DCN) \");\n    i0.ɵɵelementStart(4, \"span\", 7);\n    i0.ɵɵtext(5, \"This is a 21-digit number\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction CcdSearchComponent_div_23_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"Enter DCN number in the correct format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CcdSearchComponent_div_23_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"No record found for this DCN\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"govuk-radios__conditional\": a0,\n    \"govuk-form-group form-group-error\": a1,\n    \"govuk-radios__conditional--hidden\": a2\n  };\n};\nfunction CcdSearchComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"input\", 27, 28)(3, \"input\", 29, 14);\n    i0.ɵɵtemplate(5, CcdSearchComponent_div_23_span_5_Template, 2, 0, \"span\", 15);\n    i0.ɵɵtemplate(6, CcdSearchComponent_div_23_span_6_Template, 2, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(4, _c0, ctx_r4.selectedValue === \"DCN\" && ctx_r4.hasErrors === false, ctx_r4.hasErrors === true, ctx_r4.selectedValue === \"CCDorException\" || ctx_r4.selectedValue === \"RC\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"className\", ctx_r4.hasErrors ? \"form-control form-control-error\" : \"govuk-input govuk-!-width-one-third\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasErrors && ctx_r4.selectedValue === \"DCN\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.noCaseFound);\n  }\n}\nfunction CcdSearchComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"input\", 30);\n    i0.ɵɵlistener(\"change\", function CcdSearchComponent_div_24_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onSelectionChange(\"RC\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 31);\n    i0.ɵɵtext(3, \" Payment Reference (RC) \");\n    i0.ɵɵelementStart(4, \"span\", 7);\n    i0.ɵɵtext(5, \"For example: RC-XXXX-XXXX-XXXX-XXXX\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction CcdSearchComponent_div_25_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"Enter Payment Reference in the correct format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CcdSearchComponent_div_25_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"No record found for this Payment Reference\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CcdSearchComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"input\", 32, 14);\n    i0.ɵɵtemplate(3, CcdSearchComponent_div_25_span_3_Template, 2, 0, \"span\", 15);\n    i0.ɵɵtemplate(4, CcdSearchComponent_div_25_span_4_Template, 2, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(4, _c0, ctx_r6.selectedValue === \"RC\" && ctx_r6.hasErrors === false, ctx_r6.hasErrors === true, ctx_r6.selectedValue === \"CCDorException\" || ctx_r6.selectedValue === \"DCN\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", ctx_r6.hasErrors ? \"form-control form-control-error\" : \"govuk-input govuk-!-width-one-third\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.hasErrors && ctx_r6.selectedValue === \"RC\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.noCaseFound);\n  }\n}\nfunction CcdSearchComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"No matching cases found\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let CcdSearchComponent = /*#__PURE__*/(() => {\n  class CcdSearchComponent {\n    paymentGroupService;\n    formBuilder;\n    router;\n    caseRefService;\n    activatedRoute;\n    viewPaymentService;\n    searchForm;\n    hasErrors = false;\n    ccdCaseNumber;\n    excReference;\n    dcnNumber;\n    takePayment;\n    selectedValue = 'CCDorException';\n    ccdPattern = /^([0-9]{4}\\-[0-9]{4}\\-[0-9]{4}\\-[0-9]{4})?([0-9]{16})?$/i;\n    dcnPattern = /^[0-9]{21}$/i;\n    prnPattern = /^([a-z]{2}\\-[0-9]{4}\\-[0-9]{4}\\-[0-9]{4}\\-[0-9]{4})?([a-z]{2}\\[0-9]{16})?$/i;\n    noCaseFound = false;\n    noCaseFoundInCCD = false;\n    isBulkscanningEnable = true;\n    caseType = null;\n    errorMessage = this.getErrorMessage(false);\n    isStrategicFixEnable;\n    isTurnOff;\n    caseResponse;\n    servicerequest;\n    isPaymentStatusEnabled;\n    constructor(paymentGroupService, formBuilder, router, caseRefService, activatedRoute, viewPaymentService) {\n      this.paymentGroupService = paymentGroupService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.caseRefService = caseRefService;\n      this.activatedRoute = activatedRoute;\n      this.viewPaymentService = viewPaymentService;\n    }\n    ngOnInit() {\n      this.takePayment = this.activatedRoute.snapshot.queryParams['takePayment'] === 'false' ? null : true;\n      this.servicerequest = this.activatedRoute.snapshot.queryParams['servicerequest'];\n      this.paymentGroupService.getBSFeature().then(status => {\n        this.isBulkscanningEnable = status;\n      });\n      this.paymentGroupService.getLDFeature('bspayments-strategic').then(status => {\n        this.isStrategicFixEnable = status;\n      });\n      this.paymentGroupService.getLDFeature('apportion-feature').then(status => {\n        this.isTurnOff = status;\n      });\n      this.paymentGroupService.getLDFeature('payment-status-update-fe').then(status => {\n        this.isPaymentStatusEnabled = !status;\n      });\n      this.fromValidation();\n    }\n    fromValidation() {\n      this.searchForm = this.formBuilder.group({\n        searchInput: new FormControl('', [Validators.required, Validators.pattern(!this.isBulkscanningEnable ?\n        // tslint:disable-next-line:max-line-length\n        this.ccdPattern : this.selectedValue === 'CCDorException' ? this.ccdPattern : this.selectedValue === 'DCN' ? this.dcnPattern : this.prnPattern)]),\n        CCDorException: new FormControl(this.selectedValue)\n      });\n    }\n    onSelectionChange(value) {\n      this.selectedValue = value;\n      this.hasErrors = false;\n      this.noCaseFoundInCCD = false;\n      this.noCaseFound = false;\n      this.searchForm.get('CCDorException').setValue(value);\n      this.fromValidation();\n    }\n    searchFees() {\n      if (this.searchForm.controls['searchInput'].valid) {\n        this.hasErrors = false;\n        const searchValue = this.searchForm.get('searchInput').value;\n        let bsEnableUrl = this.isBulkscanningEnable ? '&isBulkScanning=Enable' : '&isBulkScanning=Disable';\n        bsEnableUrl += this.isStrategicFixEnable ? '&isStFixEnable=Enable' : '&isStFixEnable=Disable';\n        bsEnableUrl += this.isTurnOff ? '&isTurnOff=Enable' : '&isTurnOff=Disable';\n        bsEnableUrl += this.isPaymentStatusEnabled ? '&isPaymentStatusEnabled=Enable' : '&isPaymentStatusEnabled=Disable';\n        if (this.selectedValue.toLocaleLowerCase() === 'dcn') {\n          this.caseResponse = null;\n          this.paymentGroupService.getBSPaymentsByDCN(searchValue).then(response => {\n            const res = JSON.parse(JSON.parse(response));\n            if (res['data'].ccd_reference || res['data'].exception_record_reference) {\n              this.dcnNumber = searchValue;\n              if (res['data'].ccd_reference !== undefined && res['data'].ccd_reference.length > 0) {\n                this.ccdCaseNumber = res['data'].ccd_reference;\n                this.excReference = '';\n              } else if (res['data'].exception_record_reference !== undefined && res['data'].exception_record_reference.length > 0) {\n                this.excReference = res['data'].exception_record_reference;\n                this.ccdCaseNumber = '';\n              }\n              const validRefCheck = this.ccdCaseNumber ? this.ccdCaseNumber : this.excReference;\n              this.caseRefService.validateCaseRef(validRefCheck).subscribe({\n                next: resp => {\n                  ls.set('ccdNumber', this.ccdCaseNumber ? this.ccdCaseNumber : this.excReference);\n                  this.caseResponse = JSON.parse(resp);\n                },\n                error: () => {\n                  ls.remove('ccdNumber');\n                  this.noCaseFoundInCCD = true;\n                },\n                complete: () => {\n                  if (this.caseResponse.case) {\n                    this.caseType = this.ccdCaseNumber ? this.caseResponse.case : this.caseResponse.exception;\n                  } else {\n                    this.caseType = this.caseResponse['case_type'];\n                  }\n                  // tslint:disable-next-line:max-line-length\n                  let url = this.takePayment ? `?selectedOption=${this.selectedValue}&exceptionRecord=${this.excReference}&dcn=${this.dcnNumber}&view=case-transactions&takePayment=${this.takePayment}&servicerequest=${this.servicerequest}` : `?selectedOption=${this.selectedValue}&exceptionRecord=${this.excReference}&dcn=${this.dcnNumber}&view=case-transactions&servicerequest=${this.servicerequest}`;\n                  url = url.replace(/[\\r\\n]+/g, ' ');\n                  this.router.navigateByUrl(`/payment-history/${this.ccdCaseNumber}${url}&caseType=${this.caseType}${bsEnableUrl}`);\n                }\n              });\n            }\n          }).catch(() => {\n            ls.remove('ccdNumber');\n            this.noCaseFound = true;\n          });\n        } else if (this.selectedValue.toLocaleLowerCase() === 'ccdorexception') {\n          this.ccdCaseNumber = this.removeHyphenFromString(searchValue);\n          this.dcnNumber = null;\n          this.caseResponse = null;\n          this.caseRefService.validateCaseRef(this.ccdCaseNumber).subscribe({\n            next: resp => {\n              this.caseResponse = JSON.parse(resp);\n              this.noCaseFoundInCCD = false;\n            },\n            error: () => {\n              ls.remove('ccdNumber');\n              this.noCaseFoundInCCD = true;\n            },\n            complete: () => {\n              // tslint:disable-next-line:max-line-length\n              let url = this.takePayment ? `?selectedOption=${this.selectedValue}&dcn=${this.dcnNumber}&view=case-transactions&takePayment=${this.takePayment}&servicerequest=${this.servicerequest}` : `?selectedOption=${this.selectedValue}&dcn=${this.dcnNumber}&view=case-transactions&servicerequest=${this.servicerequest}`;\n              url = url.replace(/[\\r\\n]+/g, ' ');\n              this.paymentGroupService.getBSPaymentsByCCD(this.ccdCaseNumber).then(response => {\n                const result = JSON.parse(JSON.parse(response.toString()));\n                if (this.caseResponse.case) {\n                  this.caseType = this.caseResponse.case;\n                } else {\n                  this.caseType = this.caseResponse['case_type'];\n                }\n                this.errorMessage = this.getErrorMessage(false);\n                if (result['data'] && result['data'].exception_record_reference && result['data'].ccd_reference) {\n                  if (this.caseResponse.case) {\n                    this.caseType = this.caseResponse.exception;\n                  }\n                  this.ccdCaseNumber = result['data'].ccd_reference;\n                }\n                ls.set('ccdNumber', this.ccdCaseNumber);\n                this.router.navigateByUrl(`/payment-history/${this.ccdCaseNumber}${url}&caseType=${this.caseType}${bsEnableUrl}`);\n              }).catch(e => {\n                ls.remove('ccdNumber');\n                window.scrollTo(0, 0);\n                this.errorMessage = this.getErrorMessage(true);\n              });\n            }\n          });\n        } else if (this.selectedValue.toLocaleLowerCase() === 'rc') {\n          this.caseResponse = null;\n          this.noCaseFound = false;\n          this.viewPaymentService.getPaymentDetail(searchValue).subscribe({\n            next: res => {\n              if (res['ccd_case_number'] || res['case_reference']) {\n                this.ccdCaseNumber = res['ccd_case_number'] ? res['ccd_case_number'] : res['case_reference'];\n                this.dcnNumber = null;\n                this.caseRefService.validateCaseRef(this.ccdCaseNumber).subscribe({\n                  next: resp => {\n                    this.caseResponse = JSON.parse(resp);\n                    this.noCaseFound = false;\n                  },\n                  error: () => {\n                    ls.remove('ccdNumber');\n                    this.noCaseFound = true;\n                  },\n                  complete: () => {\n                    if (this.caseResponse.case) {\n                      this.caseType = res['ccd_case_number'] ? this.caseResponse.case : this.caseResponse.exception;\n                    } else {\n                      this.caseType = this.caseResponse['case_type'];\n                    }\n                    ls.set('ccdNumber', this.ccdCaseNumber);\n                    // tslint:disable-next-line:max-line-length\n                    let url = this.takePayment ? `?selectedOption=${this.selectedValue}&dcn=${this.dcnNumber}&view=case-transactions&takePayment=${this.takePayment}&servicerequest=${this.servicerequest}` : `?selectedOption=${this.selectedValue}&dcn=${this.dcnNumber}&view=case-transactions&servicerequest=${this.servicerequest}`;\n                    url = url.replace(/[\\r\\n]+/g, ' ');\n                    this.router.navigateByUrl(`/payment-history/${this.ccdCaseNumber}${url}&caseType=${this.caseType}${bsEnableUrl}`);\n                  }\n                });\n              }\n            },\n            error: () => {\n              ls.remove('ccdNumber');\n              this.noCaseFoundInCCD = true;\n            }\n          });\n        } else {\n          ls.remove('ccdNumber');\n          return this.hasErrors = true;\n        }\n      } else {\n        ls.remove('ccdNumber');\n        return this.hasErrors = true;\n      }\n    }\n    getErrorMessage(isErrorExist) {\n      return {\n        title: 'Something went wrong',\n        body: 'Please try again later',\n        showError: isErrorExist\n      };\n    }\n    removeHyphenFromString(input) {\n      const pattern = /\\-/gi;\n      return input.replace(pattern, '');\n    }\n    static ɵfac = function CcdSearchComponent_Factory(t) {\n      return new (t || CcdSearchComponent)(i0.ɵɵdirectiveInject(i1.PaymentGroupService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CaseRefService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.ViewPaymentService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CcdSearchComponent,\n      selectors: [[\"app-ccd-search\"]],\n      decls: 29,\n      vars: 15,\n      consts: [[3, \"formGroup\"], [\"class\", \"govuk-error-summary\", \"aria-labelledby\", \"error-summary-title\", \"role\", \"alert\", \"tabindex\", \"-1\", \"data-module\", \"govuk-error-summary\", 4, \"ngIf\"], [1, \"govuk-form-group\"], [1, \"govuk-fieldset__legend--xl\"], [1, \"govuk-fieldset__heading\"], [1, \"govuk-fieldset\"], [1, \"govuk-fieldset__legend\", \"govuk-fieldset__legend--m\"], [1, \"form-hint\"], [\"data-module\", \"govuk-radios\", 1, \"govuk-radios\", \"govuk-radios--conditional\"], [1, \"govuk-radios__item\"], [\"id\", \"CCDorException\", \"formControlName\", \"CCDorException\", \"name\", \"CCDorException\", \"type\", \"radio\", \"value\", \"CCDorException\", \"data-aria-controls\", \"CCDorException\", 1, \"govuk-radios__input\", 3, \"checked\", \"change\"], [\"for\", \"CCDorException\", 1, \"govuk-label\", \"govuk-radios__label\", \"govuk-label--m\"], [3, \"ngClass\"], [\"aria-label\", \"Enter CCDorException\", \"id\", \"ccd-search\", \"type\", \"text\", \"name\", \"ccd-search\", \"formControlName\", \"searchInput\", 3, \"className\"], [\"searchInput\", \"\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"class\", \"govuk-radios__item\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"button\", 3, \"click\"], [\"class\", \"nocase-message\", 4, \"ngIf\"], [\"aria-labelledby\", \"error-summary-title\", \"role\", \"alert\", \"tabindex\", \"-1\", \"data-module\", \"govuk-error-summary\", 1, \"govuk-error-summary\"], [\"id\", \"error-summary-title\", 1, \"govuk-error-summary__title\", \"govuk-error-summary__title-custom\"], [1, \"govuk-error-summary__body\"], [1, \"govuk-list\", \"govuk-error-summary__list\"], [1, \"error-message\"], [\"id\", \"DCN\", \"aria-label\", \"Enter DCN\", \"formControlName\", \"CCDorException\", \"name\", \"CCDorException\", \"type\", \"radio\", \"value\", \"DCN\", \"data-aria-controls\", \"DCN\", 1, \"govuk-radios__input\", 3, \"change\"], [\"for\", \"DCN\", 1, \"govuk-label\", \"govuk-radios__label\", \"govuk-label--m\"], [\"type\", \"hidden\", \"value\", \"CCDSEARCH\", 1, \"iFrameDrivenImageValue\"], [\"myInput\", \"\"], [\"id\", \"dcn-search\", \"type\", \"text\", \"name\", \"ccd-search\", \"aria-label\", \"Enter DCN\", \"formControlName\", \"searchInput\", 3, \"className\"], [\"id\", \"RC\", \"aria-label\", \"Enter RC\", \"formControlName\", \"CCDorException\", \"name\", \"CCDorException\", \"type\", \"radio\", \"value\", \"RC\", \"data-aria-controls\", \"RC\", 1, \"govuk-radios__input\", 3, \"change\"], [\"for\", \"RC\", 1, \"govuk-label\", \"govuk-radios__label\", \"govuk-label--m\"], [\"id\", \"RC-search\", \"type\", \"text\", \"name\", \"ccd-search\", \"aria-label\", \"Enter RC\", \"formControlName\", \"searchInput\", 3, \"className\"], [1, \"nocase-message\"]],\n      template: function CcdSearchComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵtemplate(1, CcdSearchComponent_div_1_Template, 7, 2, \"div\", 1);\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"legend\", 3)(4, \"h1\", 4);\n          i0.ɵɵtext(5, \" Search for a case \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"fieldset\", 5)(7, \"legend\", 6)(8, \"h3\", 7);\n          i0.ɵɵtext(9, \" What do you want to search for? \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"input\", 10);\n          i0.ɵɵlistener(\"change\", function CcdSearchComponent_Template_input_change_12_listener() {\n            return ctx.onSelectionChange(\"CCDorException\");\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"label\", 11)(14, \"legend\");\n          i0.ɵɵtext(15, \" CCD case reference or exception record\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"span\", 7);\n          i0.ɵɵtext(17, \"For example: 1111-2222-3333-4444\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"div\", 12);\n          i0.ɵɵelement(19, \"input\", 13, 14);\n          i0.ɵɵtemplate(21, CcdSearchComponent_span_21_Template, 2, 0, \"span\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, CcdSearchComponent_div_22_Template, 6, 0, \"div\", 16);\n          i0.ɵɵtemplate(23, CcdSearchComponent_div_23_Template, 7, 8, \"div\", 17);\n          i0.ɵɵtemplate(24, CcdSearchComponent_div_24_Template, 6, 0, \"div\", 16);\n          i0.ɵɵtemplate(25, CcdSearchComponent_div_25_Template, 5, 8, \"div\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"button\", 18);\n          i0.ɵɵlistener(\"click\", function CcdSearchComponent_Template_button_click_26_listener() {\n            return ctx.searchFees();\n          });\n          i0.ɵɵtext(27, \"Search\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, CcdSearchComponent_div_28_Template, 2, 0, \"div\", 19);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.searchForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage.showError);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"checked\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(11, _c0, ctx.selectedValue === \"CCDorException\" && ctx.hasErrors === false, ctx.hasErrors === true, ctx.selectedValue === \"DCN\" || ctx.selectedValue === \"RC\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"className\", ctx.hasErrors ? \"form-control form-control-error\" : \"govuk-input govuk-!-width-one-third\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.hasErrors && ctx.selectedValue === \"CCDorException\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isBulkscanningEnable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isBulkscanningEnable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isBulkscanningEnable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isBulkscanningEnable);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.noCaseFoundInCCD);\n        }\n      },\n      dependencies: [i6.NgClass, i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".button-search[_ngcontent-%COMP%]{margin-left:15px;line-height:1.15}.govuk-input[_ngcontent-%COMP%]:focus{outline:3px solid rgb(255,175,0);outline-offset:0;box-shadow:inset 0 0 0 2px}.govuk-radios__input[_ngcontent-%COMP%]:focus + .govuk-radios__label[_ngcontent-%COMP%]:before{border-width:4px;box-shadow:0 0 0 4px #ffaf00}.govuk-radios__conditional[_ngcontent-%COMP%]{margin-bottom:15px;margin-left:18px;padding-left:33px;border-left:4px solid #b1b4b6}.govuk-radios__conditional--hidden[_ngcontent-%COMP%]{display:none}.govuk-label[_ngcontent-%COMP%]:not(.govuk-label--m):not(.govuk-label--l):not(.govuk-label--xl) + .govuk-hint[_ngcontent-%COMP%]{margin-bottom:10px}.govuk-fieldset__heading[_ngcontent-%COMP%]{font-weight:700;font-size:48px}.form-hint[_ngcontent-%COMP%]{margin-top:5px}.govuk-label--m[_ngcontent-%COMP%]{font-size:large}.govuk-error-summary[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:24px}.govuk-error-summary__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:19px}\"]\n    });\n  }\n  return CcdSearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Meta } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nexport let PaybubbleHttpClient = /*#__PURE__*/(() => {\n  class PaybubbleHttpClient {\n    http;\n    meta;\n    constructor(http, meta) {\n      this.http = http;\n      this.meta = meta;\n    }\n    post(url, body, options) {\n      const opts = this.addHeaders(options || {});\n      return this.http.post(url, body, opts);\n    }\n    patch(url, body, options) {\n      const opts = this.addHeaders(options || {});\n      return this.http.patch(url, body, opts);\n    }\n    put(url, body, options) {\n      const opts = this.addHeaders(options || {});\n      return this.http.put(url, body, opts);\n    }\n    get(url, options) {\n      const opts = this.addHeaders(options || {});\n      return this.http.get(url, opts);\n    }\n    addHeaders(options) {\n      const csrfToken = this.meta.getTag('name=csrf-token');\n      const headers = {};\n      if (options.headers) {\n        options.headers.forEach(element => {\n          headers[element] = options.headers.get(element);\n        });\n      }\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n      headers['CSRF-Token'] = csrfToken.content;\n      options.headers = new HttpHeaders(headers);\n      options.responseType = 'text';\n      return options;\n    }\n    static ɵfac = function PaybubbleHttpClient_Factory(t) {\n      return new (t || PaybubbleHttpClient)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Meta));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PaybubbleHttpClient,\n      factory: PaybubbleHttpClient.ɵfac\n    });\n  }\n  return PaybubbleHttpClient;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
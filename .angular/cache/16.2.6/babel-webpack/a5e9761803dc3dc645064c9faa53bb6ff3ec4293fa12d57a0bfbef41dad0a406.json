{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { IdamDetails } from '../../services/idam-details/idam-details';\nimport { PaymentGroupService } from '../../services/payment-group/payment-group.service';\nimport * as ls from 'local-storage';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/payment-group/payment-group.service\";\nimport * as i3 from \"../../services/idam-details/idam-details\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@hmcts/ccpay-web-component\";\nfunction PaymentHistoryComponent_ccpay_payment_lib_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ccpay-payment-lib\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"API_ROOT\", ctx_r0.apiRoot)(\"BULKSCAN_API_ROOT\", ctx_r0.bulkscanapiRoot)(\"REFUNDS_API_ROOT\", ctx_r0.refundsapiRoot)(\"NOTIFICATION_API_ROOT\", ctx_r0.notificationapiRoot)(\"CARDPAYMENTRETURNURL\", ctx_r0.cardPaymentReturnUrl)(\"CCD_CASE_NUMBER\", ctx_r0.ccdCaseNumber)(\"VIEW\", ctx_r0.view)(\"TAKEPAYMENT\", ctx_r0.takePayment)(\"SERVICEREQUEST\", ctx_r0.servicerequest)(\"PAYMENT_GROUP_REF\", ctx_r0.paymentGroupRef)(\"EXC_REFERENCE\", ctx_r0.excReference)(\"DCN_NUMBER\", ctx_r0.dcnNumber)(\"SELECTED_OPTION\", ctx_r0.selectedOption)(\"EXC_REFERENCE\", ctx_r0.excReference)(\"ISBSENABLE\", ctx_r0.isBulkscanningEnable)(\"ISSFENABLE\", ctx_r0.isStrategicFixEnable)(\"ISTURNOFF\", ctx_r0.isTurnOff)(\"CASETYPE\", ctx_r0.caseType)(\"REFUNDLIST\", ctx_r0.refundlist)(\"ISPAYMENTSTATUSENABLED\", ctx_r0.isPaymentStatusEnabled)(\"LOGGEDINUSEREMAIL\", ctx_r0.LOGGEDINUSEREMAIL)(\"LOGGEDINUSERROLES\", ctx_r0.LOGGEDINUSERROLES);\n  }\n}\nexport let PaymentHistoryComponent = /*#__PURE__*/(() => {\n  class PaymentHistoryComponent {\n    router;\n    paymentGroupService;\n    activatedRoute;\n    idamDetails;\n    apiRoot;\n    bulkscanapiRoot;\n    refundsapiRoot;\n    notificationapiRoot;\n    view;\n    takePayment;\n    ccdCaseNumber;\n    excReference;\n    paymentGroupRef;\n    dcnNumber;\n    selectedOption;\n    isBulkscanningEnable;\n    isStrategicFixEnable;\n    isTurnOff;\n    caseType;\n    isOldPcipalOff;\n    isNewPcipalOff;\n    servicerequest;\n    refundlist;\n    isPaymentStatusEnabled;\n    LOGGEDINUSEREMAIL;\n    LOGGEDINUSERROLES;\n    cardPaymentReturnUrl;\n    lsCcdNumber = ls.get('ccdNumber');\n    userRoles = ['IDAM_SUPER_USER', 'caseworker-probate-authorize', 'caseworker', 'caseworker-divorce', 'payments', 'payments-refund-approver', 'payments-refund'];\n    constructor(router, paymentGroupService, activatedRoute, idamDetails) {\n      this.router = router;\n      this.paymentGroupService = paymentGroupService;\n      this.activatedRoute = activatedRoute;\n      this.idamDetails = idamDetails;\n    }\n    ngOnInit() {\n      this.paymentGroupService.getLDFeature('payment-status-update-fe').then(status => {\n        this.isPaymentStatusEnabled = !status;\n      });\n      this.idamDetails.getUserRoles().subscribe(roles => {\n        this.activatedRoute.params.subscribe({\n          next: params => {\n            this.apiRoot = 'api/payment-history';\n            this.bulkscanapiRoot = 'api/bulk-scan';\n            this.refundsapiRoot = 'api/refund';\n            this.notificationapiRoot = 'api/notification';\n            this.ccdCaseNumber = params['ccdCaseNumber'];\n            this.isBulkscanningEnable = this.activatedRoute.snapshot.queryParams['isBulkScanning'] === 'Enable';\n            this.isStrategicFixEnable = this.activatedRoute.snapshot.queryParams['isStFixEnable'] === 'Enable';\n            this.isTurnOff = this.activatedRoute.snapshot.queryParams['isTurnOff'] === 'Enable';\n            this.excReference = this.activatedRoute.snapshot.queryParams['exceptionRecord'];\n            this.view = this.activatedRoute.snapshot.queryParams['view'];\n            this.takePayment = this.activatedRoute.snapshot.queryParams['takePayment'];\n            this.paymentGroupRef = this.activatedRoute.snapshot.queryParams['paymentGroupRef'];\n            this.dcnNumber = this.activatedRoute.snapshot.queryParams['dcn'];\n            this.selectedOption = this.activatedRoute.snapshot.queryParams['selectedOption'];\n            this.caseType = this.activatedRoute.snapshot.queryParams['caseType'];\n            this.servicerequest = this.activatedRoute.snapshot.queryParams['servicerequest'];\n            this.refundlist = this.activatedRoute.snapshot.queryParams['refundlist'];\n            this.LOGGEDINUSEREMAIL = '';\n            this.LOGGEDINUSERROLES = roles;\n          }\n        });\n      });\n    }\n    checkValidUser() {\n      const currenturl = this.router.url.split('?', 1);\n      if (this.lsCcdNumber !== this.ccdCaseNumber && !(currenturl[0] === '/refund-list' || currenturl[0] === '/payment-history/view')) {\n        this.router.navigateByUrl('/ccd-search?takePayment=true');\n      }\n    }\n    static ɵfac = function PaymentHistoryComponent_Factory(t) {\n      return new (t || PaymentHistoryComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PaymentGroupService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.IdamDetails));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PaymentHistoryComponent,\n      selectors: [[\"app-payment-history\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"API_ROOT\", \"BULKSCAN_API_ROOT\", \"REFUNDS_API_ROOT\", \"NOTIFICATION_API_ROOT\", \"CARDPAYMENTRETURNURL\", \"CCD_CASE_NUMBER\", \"VIEW\", \"TAKEPAYMENT\", \"SERVICEREQUEST\", \"PAYMENT_GROUP_REF\", \"EXC_REFERENCE\", \"DCN_NUMBER\", \"SELECTED_OPTION\", \"ISBSENABLE\", \"ISSFENABLE\", \"ISTURNOFF\", \"CASETYPE\", \"REFUNDLIST\", \"ISPAYMENTSTATUSENABLED\", \"LOGGEDINUSEREMAIL\", \"LOGGEDINUSERROLES\", 4, \"ngIf\"], [3, \"API_ROOT\", \"BULKSCAN_API_ROOT\", \"REFUNDS_API_ROOT\", \"NOTIFICATION_API_ROOT\", \"CARDPAYMENTRETURNURL\", \"CCD_CASE_NUMBER\", \"VIEW\", \"TAKEPAYMENT\", \"SERVICEREQUEST\", \"PAYMENT_GROUP_REF\", \"EXC_REFERENCE\", \"DCN_NUMBER\", \"SELECTED_OPTION\", \"ISBSENABLE\", \"ISSFENABLE\", \"ISTURNOFF\", \"CASETYPE\", \"REFUNDLIST\", \"ISPAYMENTSTATUSENABLED\", \"LOGGEDINUSEREMAIL\", \"LOGGEDINUSERROLES\"]],\n      template: function PaymentHistoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, PaymentHistoryComponent_ccpay_payment_lib_0_Template, 1, 22, \"ccpay-payment-lib\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.LOGGEDINUSERROLES.length > 0);\n        }\n      },\n      dependencies: [i4.NgIf, i5.PaymentLibComponent]\n    });\n  }\n  return PaymentHistoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
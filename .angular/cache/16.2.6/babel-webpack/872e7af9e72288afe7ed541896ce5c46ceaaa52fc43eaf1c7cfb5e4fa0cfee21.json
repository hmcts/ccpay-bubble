{"ast":null,"code":"import { PaybubbleHttpClient } from '../httpclient/paybubble.http.client';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../httpclient/paybubble.http.client\";\nconst BULK_SCANNING_ENABLED = 'bulk-scan-enabling-fe';\nconst DISCONTINUED_FEES_FEATURE_ENABLED = 'discontinued-fees-feature';\nexport let PaymentGroupService = /*#__PURE__*/(() => {\n  class PaymentGroupService {\n    http;\n    currentEnvironment$ = new BehaviorSubject('');\n    constructor(http) {\n      this.http = http;\n    }\n    postPaymentGroup(paymentGroup) {\n      return this.http.post('api/payment-groups', paymentGroup).toPromise().then(paymentGroupJson => {\n        return paymentGroupJson;\n      });\n    }\n    putPaymentGroup(paymentGroupRef, paymentGroup) {\n      return this.http.put(`api/payment-groups/${paymentGroupRef}`, paymentGroup).toPromise().then(paymentGroupJson => {\n        return paymentGroupJson;\n      });\n    }\n    getBSPaymentsByDCN(dcn) {\n      return this.http.get(`api/bulk-scan/cases?document_control_number=${dcn}`).toPromise().then(bsPaymentGroupJson => {\n        const bsPaymentGroup = JSON.stringify(bsPaymentGroupJson);\n        return bsPaymentGroup;\n      });\n    }\n    getBSFeature() {\n      return this.http.get('api/payment-history/bulk-scan-feature').toPromise().then(features => {\n        const regFeature = JSON.parse(features).find(feature => feature.uid === BULK_SCANNING_ENABLED);\n        return regFeature ? regFeature.enable : false;\n      });\n    }\n    getLDFeature(flagKey) {\n      return this.http.get(`api/payment-history/LD-feature?flag=${flagKey}`).toPromise().then(features => {\n        return !JSON.stringify(features);\n      });\n    }\n    getDiscontinuedFrFeature() {\n      return this.http.get('api/payment-history/bulk-scan-feature').toPromise().then(features => {\n        const regFeature = JSON.parse(features).find(feature => feature.uid === DISCONTINUED_FEES_FEATURE_ENABLED);\n        return regFeature ? regFeature.enable : false;\n      });\n    }\n    getEnvironment() {\n      return this.http.get('api/get-environment').toPromise().then(env => {\n        return env;\n      });\n    }\n    getBSPaymentsByCCD(ccdCaseNumber) {\n      return this.http.get(`api/bulk-scan/cases/${ccdCaseNumber}`).toPromise().then(response => {\n        return JSON.stringify(response);\n      });\n    }\n    static ɵfac = function PaymentGroupService_Factory(t) {\n      return new (t || PaymentGroupService)(i0.ɵɵinject(i1.PaybubbleHttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PaymentGroupService,\n      factory: PaymentGroupService.ɵfac\n    });\n  }\n  return PaymentGroupService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}